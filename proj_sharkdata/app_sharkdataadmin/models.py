#!/usr/bin/env python
# -*- coding:utf-8 -*-
#
# Copyright (c) 2013-2014 SMHI, Swedish Meteorological and Hydrological Institute 
# License: MIT License (see LICENSE.txt or http://opensource.org/licenses/mit).

from django.db import models

class CommandLog(models.Model):
    """ Database table definition for logging of command executions. """
    #
    # "id" is generated by default by Django.
    command_name = models.CharField(max_length=255)
    status = models.CharField(max_length=63)
    started_datetime = models.DateTimeField(auto_now_add = True)
    finished_datetime = models.DateTimeField(auto_now = True)
    executed_by = models.CharField(max_length=255)
    result_log = models.TextField()
    debug_log = models.TextField()

    def __unicode__(self):
        return unicode(self.started_datetime) + u' ' + \
               self.command_name + u' ' + \
               self.status


def createLogRow(command = u'NOT-DEFINED', 
                 status = u'RUNNING', 
                 user = u''):
    """ """
    logrow = CommandLog(command_name = command,
                  status = status,
                  executed_by = user,
                  result_log = u'',
                  debug_log = u''
                  )
    logrow.save()
    addResultLog(logrow.id, 'Command: ' + command + u'\r\n\r\n')
    return logrow.id  

def changeLogRowStatus(row_id, status):
    """ """
    logrow = None
    try: 
        logrow = CommandLog.objects.get(id = row_id)
        logrow.status = status
        logrow.save()
        addResultLog(logrow.id, u'\n- New status: ' + status + u'\r\n\r\n')
    except:
        return

def addResultLog(row_id, result_log):
    """ The result log is public to all users. """
    logrow = None
    try: 
        logrow = CommandLog.objects.get(id = row_id)
        logrow.result_log += result_log + u'\n'
        logrow.debug_log += result_log + u'\n' # Also add to debug log.
        logrow.save()
    except:
        return

def addDebugLog(row_id, debug_log):
    """ The debug log is not public. Should only be sent by mail to responsible administrator. """
    logrow = None
    try: 
        logrow = CommandLog.objects.get(id = row_id)
        logrow.debug_log += debug_log + u'\n'
        logrow.save()
    except:
        return
